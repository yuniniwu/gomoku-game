{"version":3,"sources":["components/Board.js","components/Information.js","useGomoku.js","Gomoku.js","index.js"],"names":["Row","styled","div","BoardOutline","props","theme","colors","bg_notice","shadow","DefaultSquare","button","bg_board","Chess","$color","Board","squares","onClick","map","row","y","_","x","Heading","h1","font_main","Info","Status","p","Button","bg_main","btn_main","Information","winner","player","useGomoku","useState","Array","fill","board","setBoard","playerIsBlack","setPlayerIsBlack","setWinner","blackOrWhite","countTotal","currentY","currentX","directionY","directionX","currentPlayer","tempX","tempY","total","handleClick","newBoard","JSON","parse","stringify","getWinner","handleRestart","Container","bg_card","Gomoku","ReactDOM","render","bg_danger","bg_safe","font_white","btn_danger","btn_save","document","getElementById"],"mappings":"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","file":"static/js/main.fdc659e1.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Row = styled.div`\n  &:after {\n    clear: both;\n    content: '';\n    display: table;\n  }\n`;\n\nconst BoardOutline = styled.div`\n  background: ${(props) => props.theme.colors.bg_notice};\n  box-shadow: 3px 3px 8px 3px ${(props) => props.theme.colors.shadow};\n  border-radius: 10px;\n  padding: 5vmin;\n`;\n\nconst DefaultSquare = styled.button`\n  background: ${(props) => props.theme.colors.bg_board};\n  border: 1px solid #fff;\n  float: left;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 3vmin;\n  width: 4vmin;\n  height: 4vmin;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nconst Chess = styled.div`\n  width: 3.6vmin;\n  height: 3.6vmin;\n  background: ${(props) => props.$color};\n  border-radius: 50%;\n  float: left;\n`;\n\nexport default function Board({ squares, onClick }) {\n  return (\n    <BoardOutline>\n      {squares.map((row, y) => (\n        <Row key={y}>\n          {row.map((_, x) => (\n            <DefaultSquare key={x} onClick={() => onClick(x, y)}>\n              {squares[y][x] && <Chess $color={squares[y][x]} />}\n            </DefaultSquare>\n          ))}\n        </Row>\n      ))}\n    </BoardOutline>\n  );\n}\n\nBoard.propTypes = {\n  squares: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Heading = styled.h1`\n  font-size: 2rem;\n  text-align: center;\n  color: ${(props) => props.theme.colors.font_main};\n`;\n\nconst Info = styled.div`\n  font-size: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 30vmin;\n  margin-bottom: 1rem;\n`;\n\nconst Status = styled.p`\n  font-weight: bold;\n  color: ${(props) => props.theme.colors.font_main};\n  margin: 0 1rem;\n`;\n\nconst Button = styled.button`\n  background-color: ${(props) => props.theme.colors.bg_main};\n  color: ${(props) => props.theme.colors.btn_main};\n  padding: 0.4rem 0.8rem;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 0.2rem 0.2rem 0.5rem 0.2rem\n    ${(props) => props.theme.colors.shadow};\n  cursor: pointer;\n\n  &:hover {\n    background: ${(props) => props.theme.colors.btn_main};\n    color: ${(props) => props.theme.colors.bg_main};\n  }\n\n  &:focus {\n    outline: 0;\n  }\n`;\n\nexport default function Information({ winner, player, onClick }) {\n  return (\n    <>\n      <Heading>五子棋 Gomoku</Heading>\n      <Info>\n        {winner && (\n          <Status>Winner is {winner === 'black' ? '黑子' : '白子'}</Status>\n        )}\n        {!winner && <Status>Player: {player ? '黑子' : '白子'}</Status>}\n        <Button onClick={() => onClick()}>再玩一次</Button>\n      </Info>\n    </>\n  );\n}\n\nInformation.propTypes = {\n  winner: PropTypes.string,\n  player: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useGomoku() {\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\n  const [playerIsBlack, setPlayerIsBlack] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const blackOrWhite = playerIsBlack ? 'black' : 'white';\n\n  const handleClick = (x, y) => {\n    if (board[y][x] || winner) return;\n\n    const newBoard = JSON.parse(JSON.stringify(board));\n    newBoard[y][x] = blackOrWhite;\n    setBoard(newBoard);\n    setWinner(getWinner(newBoard, y, x));\n    setPlayerIsBlack(!playerIsBlack);\n  };\n\n  // count continuation of one side\n  function countTotal(board, currentY, currentX, directionY, directionX) {\n    const currentPlayer = board[currentY][currentX];\n    let tempX = currentX;\n    let tempY = currentY;\n\n    // quantity of continuous chess\n    let total = 0;\n\n    do {\n      tempX += directionX;\n      tempY += directionY;\n\n      if (board[tempY][tempX] === currentPlayer) {\n        total++;\n      } else {\n        break;\n      }\n    } while (true);\n\n    return total;\n  }\n\n  function getWinner(board, y, x) {\n    if (\n      countTotal(board, y, x, 1, 0) + countTotal(board, y, x, -1, 0) >= 4 ||\n      countTotal(board, y, x, 0, 1) + countTotal(board, y, x, 0, -1) >= 4 ||\n      countTotal(board, y, x, 1, 1) + countTotal(board, y, x, -1, -1) >= 4 ||\n      countTotal(board, y, x, 1, -1) + countTotal(board, y, x, -1, 1) >= 4\n    ) {\n      return board[y][x];\n    }\n  }\n\n  const handleRestart = () => {\n    setBoard(Array(19).fill(Array(19).fill(null)));\n    setPlayerIsBlack(true);\n    setWinner(null);\n  };\n\n  return {\n    board,\n    winner,\n    playerIsBlack,\n    handleClick,\n    handleRestart,\n  };\n}\n","import styled from 'styled-components';\nimport Board from './components/Board';\nimport Information from './components/Information';\nimport useGomoku from './useGomoku';\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.colors.bg_card};\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  padding-bottom: 8rem;\n`;\n\nexport default function Gomoku() {\n  const {\n    board,\n    playerIsBlack,\n    winner,\n    handleClick,\n    handleRestart,\n  } = useGomoku();\n\n  return (\n    <Container>\n      <Information\n        winner={winner}\n        player={playerIsBlack}\n        onClick={handleRestart}\n      />\n      <Board squares={board} onClick={handleClick} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Gomoku from './Gomoku';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    bg_main: '#fff',\n    bg_card: '#eeede7',\n    bg_board: '#d89f67',\n    bg_danger: '#e7d2cc',\n    bg_safe: '#738580',\n    bg_notice: '#e5d7be',\n    font_white: '#fff',\n    font_main: '#5a5a5a',\n    shadow: '#ced4da',\n    btn_main: '#868b8e',\n    btn_danger: '#c44b4f',\n    btn_save: '#746c70',\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Gomoku />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}